courses = ["Python-разработчик с нуля", "Java-разработчик с нуля", "Fullstack-разработчик на Python",
           "Frontend-разработчик с нуля"]

mentors = [
    ["Евгений Шмаргунов", "Олег Булыгин", "Дмитрий Демидов", "Кирилл Табельский", "Александр Ульянцев",
     "Александр Бардин", "Александр Иванов", "Антон Солонилин", "Максим Филипенко", "Елена Никитина", "Азамат Искаков",
     "Роман Гордиенко"],
    ["Филипп Воронов", "Анна Юшина", "Иван Бочаров", "Анатолий Корсаков", "Юрий Пеньков", "Илья Сухачев",
     "Иван Маркитан", "Ринат Бибиков", "Вадим Ерошевичев", "Тимур Сейсембаев", "Максим Батырев", "Никита Шумский",
     "Алексей Степанов", "Денис Коротков", "Антон Глушков", "Сергей Индюков", "Максим Воронцов", "Евгений Грязнов",
     "Константин Виролайнен", "Сергей Сердюк", "Павел Дерендяев"],
    ["Евгений Шмаргунов", "Олег Булыгин", "Александр Бардин", "Александр Иванов", "Кирилл Табельский",
     "Александр Ульянцев", "Роман Гордиенко", "Адилет Асканжоев", "Александр Шлейко", "Алена Батицкая", "Денис Ежков",
     "Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Максим Филипенко", "Елена Никитина"],
    ["Владимир Чебукин", "Эдгар Нуруллин", "Евгений Шек", "Валерий Хаслер", "Татьяна Тен", "Александр Фитискин",
     "Александр Шлейко", "Алена Батицкая", "Александр Беспоясов", "Денис Ежков", "Николай Лопин", "Михаил Ларченко"]
]

codes_info = [
    "",
    "1 — число цели, которая проявляется в форме агрессивности и амбиций",
    "2 — число равновесия и контраста одновременно, поддерживает равновесие, смешивая позитивные и негативные качества",
    "3 — неустойчивость, объединяет талант и веселость, символ приспосабливаемости",
    "4 — означает устойчивость и прочность",
    "5 — символизирует риск, свободу и душевное беспокойство, которое толкает человека к путешествиям и новому опыту. С одной стороны, это самое счастливое число, с другой — самое непредсказуемое",
    "6 — символ надежности. Идеальное число, которое делится как на четное, так и на нечетное, объединяя элементы каждого",
    "7 — символизирует тайну, а также изучение и знание, как путь исследования неизвестного и невидимого",
    "8 — число материального успеха, означает надежность, доведенную до совершенства, символ всеобщего успеха",
    "9 — указывает на сильную личность с потенциальным интеллектом, способную к высокому развитию"
]


# здесь ничего менять не нужно, это готовый код, который считает "число имени"
def calc_namecode(name):
    letters = [
        "", "А", "Б", "В", "Г", "Д", "Е", "Ё", "Ж", "З", "И", "Й", "К", "Л", "М",
        "Н", "О", "П", "Р", "С", "Т", "У", "Ф", "Х", "Ц", "Ч", "Ш", "Щ", "Ъ", "Ы",
        "Ь", "Э", "Ю", "Я"
    ]

    name = name.upper()
    code = 0
    for letter in name:
        try:
            ltr_code = letters.index(letter) % 9
        except:
            continue
        if ltr_code == 0:
            ltr_code = 9
        code += ltr_code

    while code > 9:
        curr = code // 10 + code % 10
        code = curr

    return code

def set_the_meaning_of_the_name(a_list):
# добавьте сюда ваш код из Задачи 1
    all_list = []
    for m in a_list:
        all_list.extend(m)
    all_names_list = []
    for mentor in all_list:
        name = mentor.split()
        all_names_list.append(name)
    only_names = []
    for n in all_names_list:
        only_names.append(n[0])
    unique_names_str = set(only_names)
    all_names_sort = sorted(unique_names_str)
    # print(all_names_sort)
    # unique_names = ', '.join(all_names_sort)
    # print(f'Уникальные имена преподавателей: {unique_names}')
    names_codes = [[] for n in range(10)]

    for name in all_names_sort:
        code = calc_namecode(name)
        names_codes[code].append(name)

    res_string = ""
    for id, val in enumerate(names_codes, start=0):
        val_str = ', '.join(val)
        if id != 0:
            # print(f'{codes_info[id]}')
            # print(f'Коду {id} соответствуют: {val_str}')
            res_string = res_string + f'{codes_info[id]}' + '\n' + f'Коду {id} соответствуют: {val_str}' + '\n'

    return res_string

if __name__=='__main__':
	print(set_the_meaning_of_the_name(mentors))